@using ConsolaBlazor.Services.DTOs.CreacionUsuario
@using ConsolaBlazor.Services.DTOs.Horarios
@using Newtonsoft.Json
@using System.Text
@inject ISnackbar Snackbar
@inject IConfiguration Configuration
@inject HttpClient httpClient

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1" />
            Seguro que desea borrar el horario?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText>Esta apunto de borrar el horario</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="DeleteServer">Borrar Horario</MudButton>
    </DialogActions>
</MudDialog>
@code {


    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public HorariosDTO Server { get; set; } = new HorariosDTO();


    private async void DeleteServer()
    {
        var myContent = JsonConvert.SerializeObject(Server);
        var content = new StringContent(myContent, Encoding.UTF8, "application/json");
        var baseUrl = Configuration["UrlBackend"];
        var url = $"{baseUrl}/api/CreacionUsuario/EliminarUsuario";
        var response = await httpClient.PostAsync(url, content);
        
        //In a real world scenario this bool would probably be a service to delete the item from api/database
        Snackbar.Add("Horario borrado con exito!", Severity.Success);
        MudDialog.Close(DialogResult.Ok(Server.Id));
    }

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

}
